@page "/dashboard"
@using Clio.Demo.Domain.Data.EqDeriv;
@using Clio.Demo.DataPresentation.ViewModel;
@using Clio.Demo.Extension;
@using Radzen.Blazor
@using Radzen;


@inject EqDerivViewModel viewModel;

<PageTitle>Sales Dashboard</PageTitle>

<h1>Sales Dashboard</h1>

@if (accounts == null)
{
    <p><em>Loading...</em></p>
}
else
{
     <div class="col-lg-12 control-section">
        <div class="content-wrapper">
            <div class="row">
                <div>&nbsp;</div>
                <div>&nbsp;</div>
                <div class='e-statustext'>Clients</div>
                <div>&nbsp;</div>
                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@accounts" TItem="Account" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
                    <Columns>
                        <RadzenDataGridColumn TItem="Account"  Property="MasterCode"  Title="Code" Filterable="false" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn TItem="Account"  Property="AccountName" Title="Name" Frozen="true" Width="160px" />
                        <RadzenDataGridColumn TItem="Account"  Property="DeskCode"    Title="Desk" Width="160px"/>
                    </Columns>
                </RadzenDataGrid>
                <div>&nbsp;</div>
                <div>&nbsp;</div>
                <div class='e-statustext'>Trade Blotter</div>
                <div>&nbsp;</div>
                <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                            Data="@accounts" TItem="Account" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
                    <Columns>
                        <RadzenDataGridColumn TItem="Account" Property="MasterCode" Title="Code" Filterable="false" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
                        <RadzenDataGridColumn TItem="Account" Property="AccountName" Title="Name" Frozen="true" Width="160px" />
                        <RadzenDataGridColumn TItem="Account" Property="DeskCode" Title="Desk" Width="160px" />
                    </Columns>
                </RadzenDataGrid>
            </div>
        </div>
    </div>
}

@code {
    IEnumerable<Account> accounts;

    protected override async Task OnInitializedAsync()
    {
        await viewModel.Initialize();

        accounts = viewModel.Accounts;
    }
}
